"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[890],{3905:(a,e,t)=>{t.d(e,{Zo:()=>i,kt:()=>k});var n=t(67294);function s(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function m(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function o(a,e){if(null==a)return{};var t,n,s=function(a,e){if(null==a)return{};var t,n,s={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(s[t]=a[t]);return s}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(s[t]=a[t])}return s}var l=n.createContext({}),p=function(a){var e=n.useContext(l),t=e;return a&&(t="function"==typeof a?a(e):m(m({},e),a)),t},i=function(a){var e=p(a.components);return n.createElement(l.Provider,{value:e},a.children)},c="mdxType",u={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(a,e){var t=a.components,s=a.mdxType,r=a.originalType,l=a.parentName,i=o(a,["components","mdxType","originalType","parentName"]),c=p(t),d=s,k=c["".concat(l,".").concat(d)]||c[d]||u[d]||r;return t?n.createElement(k,m(m({ref:e},i),{},{components:t})):n.createElement(k,m({ref:e},i))}));function k(a,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var r=t.length,m=new Array(r);m[0]=d;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=a,o[c]="string"==typeof a?a:s,m[1]=o;for(var p=2;p<r;p++)m[p]=t[p];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85162:(a,e,t)=>{t.d(e,{Z:()=>m});var n=t(67294),s=t(86010);const r={tabItem:"tabItem_Ymn6"};function m(a){let{children:e,hidden:t,className:m}=a;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(r.tabItem,m),hidden:t},e)}},74866:(a,e,t)=>{t.d(e,{Z:()=>y});var n=t(87462),s=t(67294),r=t(86010),m=t(12466),o=t(16550),l=t(91980),p=t(67392),i=t(50012);function c(a){return function(a){return s.Children.map(a,(a=>{if((0,s.isValidElement)(a)&&"value"in a.props)return a;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof a.type?a.type:a.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(a).map((a=>{let{props:{value:e,label:t,attributes:n,default:s}}=a;return{value:e,label:t,attributes:n,default:s}}))}function u(a){const{values:e,children:t}=a;return(0,s.useMemo)((()=>{const a=e??c(t);return function(a){const e=(0,p.l)(a,((a,e)=>a.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((a=>a.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(a),a}),[e,t])}function d(a){let{value:e,tabValues:t}=a;return t.some((a=>a.value===e))}function k(a){let{queryString:e=!1,groupId:t}=a;const n=(0,o.k6)(),r=function(a){let{queryString:e=!1,groupId:t}=a;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l._X)(r),(0,s.useCallback)((a=>{if(!r)return;const e=new URLSearchParams(n.location.search);e.set(r,a),n.replace({...n.location,search:e.toString()})}),[r,n])]}function N(a){const{defaultValue:e,queryString:t=!1,groupId:n}=a,r=u(a),[m,o]=(0,s.useState)((()=>function(a){let{defaultValue:e,tabValues:t}=a;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((a=>a.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((a=>a.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:e,tabValues:r}))),[l,p]=k({queryString:t,groupId:n}),[c,N]=function(a){let{groupId:e}=a;const t=function(a){return a?`docusaurus.tab.${a}`:null}(e),[n,r]=(0,i.Nk)(t);return[n,(0,s.useCallback)((a=>{t&&r.set(a)}),[t,r])]}({groupId:n}),h=(()=>{const a=l??c;return d({value:a,tabValues:r})?a:null})();(0,s.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:m,selectValue:(0,s.useCallback)((a=>{if(!d({value:a,tabValues:r}))throw new Error(`Can't select invalid tab value=${a}`);o(a),p(a),N(a)}),[p,N,r]),tabValues:r}}var h=t(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(a){let{className:e,block:t,selectedValue:o,selectValue:l,tabValues:p}=a;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,m.o5)(),u=a=>{const e=a.currentTarget,t=i.indexOf(e),n=p[t].value;n!==o&&(c(e),l(n))},d=a=>{let e=null;switch(a.key){case"Enter":u(a);break;case"ArrowRight":{const t=i.indexOf(a.currentTarget)+1;e=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(a.currentTarget)-1;e=i[t]??i[i.length-1];break}}e?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},e)},p.map((a=>{let{value:e,label:t,attributes:m}=a;return s.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,key:e,ref:a=>i.push(a),onKeyDown:d,onClick:u},m,{className:(0,r.Z)("tabs__item",v.tabItem,m?.className,{"tabs__item--active":o===e})}),t??e)})))}function b(a){let{lazy:e,children:t,selectedValue:n}=a;if(t=Array.isArray(t)?t:[t],e){const a=t.find((a=>a.props.value===n));return a?(0,s.cloneElement)(a,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},t.map(((a,e)=>(0,s.cloneElement)(a,{key:e,hidden:a.props.value!==n}))))}function x(a){const e=N(a);return s.createElement("div",{className:(0,r.Z)("tabs-container",v.tabList)},s.createElement(g,(0,n.Z)({},a,e)),s.createElement(b,(0,n.Z)({},a,e)))}function y(a){const e=(0,h.Z)();return s.createElement(x,(0,n.Z)({key:String(e)},a))}},17145:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>k,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(87462),s=(t(67294),t(3905)),r=t(74866),m=t(85162);const o={},l="Listas",p={unversionedId:"Algoritmos/LFP/Listas",id:"Algoritmos/LFP/Listas",title:"Listas",description:"Chamamos de listas \xe0s estrutura de dados din\xe2micas que permitem adicionar, remover e alterar seus elementos.",source:"@site/docs/Algoritmos/08-LFP/01-Listas.md",sourceDirName:"Algoritmos/08-LFP",slug:"/Algoritmos/LFP/Listas",permalink:"/materiais/docs/Algoritmos/LFP/Listas",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/Algoritmos/08-LFP/01-Listas.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"sidebarAlgoritmos",previous:{title:"Registros",permalink:"/materiais/docs/Algoritmos/Vetores_e_registros/Exerc\xedcios/Registros"},next:{title:"Ordena\xe7\xe3o",permalink:"/materiais/docs/Algoritmos/Ordenacao/Ordenacao"}},i={},c=[{value:"Tipos de listas",id:"tipos-de-listas",level:2},{value:"Listas duplamente encadeadas",id:"listas-duplamente-encadeadas",level:3},{value:"Listas circulares",id:"listas-circulares",level:3},{value:"Listas circulares duplamente encadeadas",id:"listas-circulares-duplamente-encadeadas",level:4}],u={toc:c},d="wrapper";function k(a){let{components:e,...o}=a;return(0,s.kt)(d,(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"listas"},"Listas"),(0,s.kt)("p",null,"Chamamos de ",(0,s.kt)("strong",{parentName:"p"},"listas")," \xe0s estrutura de dados din\xe2micas que permitem adicionar, remover e alterar seus elementos. "),(0,s.kt)("p",null,"Cada elemento de uma lista possui, al\xe9m do espa\xe7o para armazenamento da informa\xe7\xe3o em si, a informa\xe7\xe3o de onde o pr\xf3ximo elemento se encontra na mem\xf3ria. Para efeito de compara\xe7\xe3o, nos vetores todos os elementos eram alocados de uma \xfanica vez. J\xe1 nas listas, cada elemento \xe9 alocado individualmente."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Exemplo"),"  "),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Listas",src:t(24969).Z,width:"554",height:"88"}),(0,s.kt)("br",{parentName:"p"}),"\n","Dados armazenados em uma lista  "),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Vetores",src:t(66169).Z,width:"408",height:"68"}),(0,s.kt)("br",{parentName:"p"}),"\n","Dados armazenados em um vetor  "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sintaxe")),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"Lista <<tipo>> <nome> ;\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//import java.util.LinkedList\nLinkedList<<tipo>> <nome> = LinkedList<<tipo>>();\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"<nome> = list()\n")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Exemplo"),"  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Lista de valores do tipo inteiro")),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"Lista <inteiro> valores;\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//import java.util.LinkedList\nLinkedList<Integer> valores = LinkedList<Integer>();\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"valores = list()\n")))),(0,s.kt)("p",null,"E para adicionarmos e removermos elementos"),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"//obter um elemento armazenado em uma posi\xe7\xe3o espec\xedfica <p>\nlista_obter(<nome>, <p>); //fun\xe7\xe3o retorna o valor armazendo na posi\xe7\xe3o p\n//obter a quantidade de elementos de uma lista\nlista_tamanho(<nome>); // fun\xe7\xe3o retorna a quantidade de elementos\n//verificar se a lista est\xe1 vazia\nlista_vazia(<nome>); // fun\xe7\xe3o retorna verdadeiro se n\xe3o houver nenhum elemento armazenado na lista\n//adicionar um elemento ao final da lista\nlista_acrescentar(<nome>, <valor>); //fun\xe7\xe3o modifica a lista passada por par\xe2metro\n//adicionar um elemento em uma posi\xe7\xe3o espec\xedfica p\nlista_adicionar(<nome>, <p>, <valor>); //fun\xe7\xe3o modifica a lista passada por par\xe2metro\n//remover um elemento de uma posi\xe7\xe3o espec\xedfica\nlista_remover(<nome>, <p>); //fun\xe7\xe3o modifica a lista passada por par\xe2metro e retorna o valor removido\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//obter um elemento armazenado em uma posi\xe7\xe3o espec\xedfica <p>\n<nome>.get(p); //retorna o valor armazendo na posi\xe7\xe3o p\n//obter a quantidade de elementos de uma lista\n<nome>.size(); // retorna a quantidade de elementos\n//verificar se a lista est\xe1 vazia\n<nome>.isEmpty(); // retorna verdadeiro se n\xe3o houver nenhum elemento armazenado na lista\n//adicionar um elemento ao final da lista\n<nome>.add(valor);\n//adicionar um elemento em uma posi\xe7\xe3o espec\xedfica p\n<nome>.add(p, valor);\n//remover um elemento de uma posi\xe7\xe3o espec\xedfica\n<nome>.remove(p) //modifica a lista e retorna o valor removido\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'print("Ol\xe1 Mundo")\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"#obter um elemento armazenado em uma posi\xe7\xe3o espec\xedfica <p>\n<nome>[p] #retorna o valor armazendo na posi\xe7\xe3o p\n#obter a quantidade de elementos de uma lista\nlen(<nome>); # retorna a quantidade de elementos\n#verificar se a lista est\xe1 vazia\n<nome> # usar a lista em if e for retorna verdadeiro se n\xe3o houver nenhum elemento\n#adicionar um elemento ao final da lista\n<nome>.append(valor)\n#adicionar um elemento em uma posi\xe7\xe3o espec\xedfica p\n<nome>.insert(p, valor)\n#remover um elemento de uma posi\xe7\xe3o espec\xedfica\n<nome>.pop(p) #modifica a lista e retorna o valor removido\n")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Exemplo")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"neste exemplo \xe9 criada uma lista nova, e os seguintes passos s\xe3o executados:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Passo 1: a lista chamada ",(0,s.kt)("inlineCode",{parentName:"li"},"numeros")," \xe9 criada, sem elementos"),(0,s.kt)("li",{parentName:"ul"},"Passo 2: s\xe3o acrescentados elementos com os valores ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"6")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"6")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"6"))))),", ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"15")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"15")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"15"))))),", ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"12")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"12")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"12")))))," e ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"30")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"30")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"30")))))),(0,s.kt)("li",{parentName:"ul"},"Passo 3: o elemento da posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"1")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1")))))," \xe9 acessado e mostrado"),(0,s.kt)("li",{parentName:"ul"},"Passo 4: um elemento com valor ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"10")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"10")))))," \xe9 acrescentado na posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"2")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"2")))))),(0,s.kt)("li",{parentName:"ul"},"Passo 5: o elemento da posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"3")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"3")))))," \xe9 removido e mostrado"),(0,s.kt)("li",{parentName:"ul"},"Passo 6: todos os elementos s\xe3o removidos e mostrados um a um, removendo sempre o \xfaltimo elemento da lista"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Passo 1: a lista chamada ",(0,s.kt)("inlineCode",{parentName:"p"},"numeros")," \xe9 criada, sem elementos"))),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"//vari\xe1veis\nLista <inteiro> numeros; //lista\ninteiro: i, valor, n; //vari\xe1veis auxiliares\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//vari\xe1veis\nLinkedList<Integer> numeros = LinkedList<Integer>();//lista\nint: i, valor, n; //vari\xe1veis auxiliares\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"#vari\xe1veis\nnumeros = list() #lista\n")))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passo 2: s\xe3o acrescentados elementos com os valores ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"6")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"6")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"6"))))),", ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"15")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"15")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"15"))))),", ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"12")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"12")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"12")))))," e ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"30")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"30")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"30"))))))),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"lista_acrescentar(6);\nlista_acrescentar(15);\nlista_acrescentar(12);\nlista_acrescentar(30);\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"numeros.add(6);\nnumeros.add(15);\nnumeros.add(12);\nnumeros.add(30);\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"numeros.append(6)\nnumeros.append(15)\nnumeros.append(12)\nnumeros.append(30)\n")))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passo 3: o elemento da posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"1")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1")))))," \xe9 acessado e mostrado")),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"valor = lista_obter(numeros, 1);\nescreva(valor); //15\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"valor = numeros.get(1);\nSystem.out.println(valor); //15\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"valor = numeros[1]\nprint(valor) #15\n")))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passo 4: um elemento com valor ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"10")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"10")))))," \xe9 acrescentado na posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"2")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"2"))))))),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"lista_adicionar(numeros, 2, 10);\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"numeros.add(2, 10);\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"numeros.insert(2, 10)\n")))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passo 5: o elemento da posi\xe7\xe3o ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"3")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"3")))))," \xe9 removido e mostrado")),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"valor = lista_remover(numeros, 3);\nescreva(valor); //12\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"valor = numeros.remove(3);\nSystem.out.println(valor); //12\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"valor = numeros.pop(3)\nescreva(valor) #12\n")))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passo 6: todos os elementos s\xe3o removidos e mostrados um a um, removendo sempre o \xfaltimo elemento da lista")),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"enquanto(n\xe3o lista_vazia(numeros)) fa\xe7a         //enquanto houver elementos na lista\n    n = lista_tamanho(numeros);          //obt\xe9m a quantidade de elementos\n    valor = lista_remover(numeros, n-1); //remove o elemento na \xfaltima posi\xe7\xe3o\n    escreva(valor);                      //30, 10, 15 e 6 s\xe3o mostrados\nfimenquanto;\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"while(! numeros.isEmpty()){    //enquanto houver elementos na lista\n  n = numeros.size();          //obt\xe9m a quantidade de elementos\n  valor = numeros.remove(n-1); //remove o elemento na \xfaltima posi\xe7\xe3o\n  System.out.println(valor);   //30, 10, 15 e 6 s\xe3o mostrados\n}\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"while numeros:             #enquanto houver elementos na lista\n    n = len(numeros)       #obt\xe9m a quantidade de elementos\n    valor = lista_pop(n-1) #remove o elemento na \xfaltima posi\xe7\xe3o\n    print(valor)           #30, 10, 15 e 6 s\xe3o mostrados\n")))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"C\xf3digo completo"),(0,s.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c"},"inicio\n  //Passo 1: a lista chamada numeros \xe9 criada, sem elementos\n  //vari\xe1veis\n  Lista <inteiro> numeros; //lista\n  inteiro: i, valor, n; //vari\xe1veis auxiliares\n\n  //Passo 2: s\xe3o acrescentados elementos com os valores 6, 15, 12 e 30\n  lista_acrescentar(6);\n  lista_acrescentar(15);\n  lista_acrescentar(12);\n  lista_acrescentar(30);\n\n  //Passo 3: o elemento da posi\xe7\xe3o 1 \xe9 acessado e mostrado\n  valor = lista_obter(numeros, 1);\n  escreva(valor); //15\n\n  //Passo 4: um elemento com valor 10 \xe9 acrescentado na posi\xe7\xe3o 2\n  lista_adicionar(numeros, 2, 10);\n\n  //Passo 5: o elemento da posi\xe7\xe3o 3 \xe9 removido e mostrado\n  valor = lista_remover(numeros, 3);\n  escreva(valor); //12\n\n  //Passo 6: todos os elementos s\xe3o removidos e mostrados um a um, removendo sempre o \xfaltimo elemento da lista\n  enquanto(n\xe3o lista_vazia(numeros)) fa\xe7a         //enquanto houver elementos na lista\n      n = lista_tamanho(numeros);          //obt\xe9m a quantidade de elementos\n      valor = lista_remover(numeros, n-1); //remove o elemento na \xfaltima posi\xe7\xe3o\n      escreva(valor);                      //30, 10, 15 e 6 s\xe3o mostrados\n  fimenquanto;\n\nfim.\n"))),(0,s.kt)(m.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import java.util.LinkedList;\n\nclass Main{\n  public static void main(String[] args){\n      //Passo 1: a lista chamada numeros \xe9 criada, sem elementos\n      //vari\xe1veis\n      LinkedList<Integer> numeros = LinkedList<Integer>();//lista\n      int: i, valor, n; //vari\xe1veis auxiliares\n\n      //Passo 2: s\xe3o acrescentados elementos com os valores 6, 15, 12 e 30\n      numeros.add(6);\n      numeros.add(15);\n      numeros.add(12);\n      numeros.add(30);\n\n      //Passo 3: o elemento da posi\xe7\xe3o 1 \xe9 acessado e mostrado\n      valor = numeros.get(1);\n      System.out.println(valor); //15\n\n      //Passo 4: um elemento com valor 10 \xe9 acrescentado na posi\xe7\xe3o 2\n      numeros.add(2, 10);\n\n      //Passo 5: o elemento da posi\xe7\xe3o 3 \xe9 removido e mostrado\n      valor = numeros.remove(3);\n      System.out.println(valor); //12\n\n      //Passo 6: todos os elementos s\xe3o removidos e mostrados um a um, removendo sempre o \xfaltimo elemento da lista\n      while(! numeros.isEmpty()){      //enquanto houver elementos na lista\n          n = numeros.size();          //obt\xe9m a quantidade de elementos\n          valor = numeros.remove(n-1); //remove o elemento na \xfaltima posi\xe7\xe3o\n          System.out.println(valor);   //30, 10, 15 e 6 s\xe3o mostrados\n      }\n\n  }\n}\n"))),(0,s.kt)(m.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'print("Ol\xe1 Mundo")\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"\n#Passo 1: a lista chamada numeros \xe9 criada, sem elementos\n#vari\xe1veis\nnumeros = list() #lista\n\n#Passo 2: s\xe3o acrescentados elementos com os valores 6, 15, 12 e 30\nnumeros.append(6)\nnumeros.append(15)\nnumeros.append(12)\nnumeros.append(30)\n\n#Passo 3: o elemento da posi\xe7\xe3o 1 \xe9 acessado e mostrado\nvalor = numeros[1]\nprint(valor) #15\n\n#Passo 4: um elemento com valor 10 \xe9 acrescentado na posi\xe7\xe3o 2\nnumeros.insert(2, 10)\n\n#Passo 5: o elemento da posi\xe7\xe3o 3 \xe9 removido e mostrado\nvalor = numeros.pop(3)\nescreva(valor) #12\n\n#Passo 6: todos os elementos s\xe3o removidos e mostrados um a um, removendo sempre o \xfaltimo elemento da lista\nwhile numeros:             #enquanto houver elementos na lista\n    n = len(numeros)       #obt\xe9m a quantidade de elementos\n    valor = lista_pop(n-1) #remove o elemento na \xfaltima posi\xe7\xe3o\n    print(valor)           #30, 10, 15 e 6 s\xe3o mostrados  \n"))))),(0,s.kt)("h2",{id:"tipos-de-listas"},"Tipos de listas"),(0,s.kt)("h3",{id:"listas-duplamente-encadeadas"},"Listas duplamente encadeadas"),(0,s.kt)("p",null,"As listas ",(0,s.kt)("strong",{parentName:"p"},"duplamente encadeadas")," s\xe3o as listas que, al\xe9m do endere\xe7o do elemento seguinte possuem tamb\xe9m o endere\xe7o do ",(0,s.kt)("strong",{parentName:"p"},"elemento anterior"),".  "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Exemplo"),"  "),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Listas",src:t(76301).Z,width:"613",height:"156"}),(0,s.kt)("br",{parentName:"p"}),"\n","Lista duplamente encadeada"),(0,s.kt)("h3",{id:"listas-circulares"},"Listas circulares"),(0,s.kt)("p",null,"As ",(0,s.kt)("strong",{parentName:"p"},"listas circulares")," s\xe3o um tipo especial de lista, em que o \xfaltimo elemento da lista tem como pr\xf3ximo o primeiro elemento."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Listas",src:t(33785).Z,width:"592",height:"116"}),(0,s.kt)("br",{parentName:"p"}),"\n","Lista circular"),(0,s.kt)("h4",{id:"listas-circulares-duplamente-encadeadas"},"Listas circulares duplamente encadeadas"),(0,s.kt)("p",null,"As listas circulares tamb\xe9m podem ser duplamente encadeadas"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Listas",src:t(62029).Z,width:"622",height:"186"}),(0,s.kt)("br",{parentName:"p"}),"\n","Lista circular duplamente encadeada"))}k.isMDXComponent=!0},24969:(a,e,t)=>{t.d(e,{Z:()=>n});const n=t.p+"assets/images/listas.drawio-4bf6c31d44637eed326a5c1ff5100e62.svg"},33785:(a,e,t)=>{t.d(e,{Z:()=>n});const n=t.p+"assets/images/listas_circulares.drawio-c02ed184e433016205f0e795b1261074.svg"},62029:(a,e,t)=>{t.d(e,{Z:()=>n});const n=t.p+"assets/images/listas_circulares_duplamente_encadeadas.drawio-9be0a9cb939defbe0e6a42155f588358.svg"},76301:(a,e,t)=>{t.d(e,{Z:()=>n});const n=t.p+"assets/images/listas_duplamente_encadeadas.drawio-9054cab50bb9a804fa4a9cfb9b0b3f0d.svg"},66169:(a,e,t)=>{t.d(e,{Z:()=>n});const n=t.p+"assets/images/vetores.drawio-0500c172130c8708a0f41902e58fccbc.svg"}}]);