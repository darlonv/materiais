"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[5331],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=n.createContext({}),s=function(e){var a=n.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=s(e.components);return n.createElement(u.Provider,{value:a},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=r,k=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?n.createElement(k,l(l({ref:a},c),{},{components:t})):n.createElement(k,l({ref:a},c))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var u in a)hasOwnProperty.call(a,u)&&(i[u]=a[u]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294),r=t(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>O});var n=t(7462),r=t(7294),o=t(6010),l=t(2466),i=t(6550),u=t(1980),s=t(7392),c=t(12);function m(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function p(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??m(t);return function(e){const a=(0,s.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function d(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function k(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.k6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,u._X)(o),(0,r.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(n.location.search);a.set(o,e),n.replace({...n.location,search:a.toString()})}),[o,n])]}function g(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!d({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:o}))),[u,s]=k({queryString:t,groupId:n}),[m,g]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,o]=(0,c.Nk)(t);return[n,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),b=(()=>{const e=u??m;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),g(e)}),[s,g,o]),tabValues:o}}var b=t(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:a,block:t,selectedValue:i,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),p=e=>{const a=e.currentTarget,t=c.indexOf(a),n=s[t].value;n!==i&&(m(a),u(n))},d=e=>{let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},a)},s.map((e=>{let{value:a,label:t,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>c.push(e),onKeyDown:d,onClick:p},l,{className:(0,o.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":i===a})}),t??a)})))}function N(e){let{lazy:a,children:t,selectedValue:n}=e;if(t=Array.isArray(t)?t:[t],a){const e=t.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function h(e){const a=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(v,(0,n.Z)({},e,a)),r.createElement(N,(0,n.Z)({},e,a)))}function O(e){const a=(0,b.Z)();return r.createElement(h,(0,n.Z)({key:String(a)},e))}},7885:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));t(4866),t(5162);const o={},l="Imagens",i={unversionedId:"SO/Docker/Imagens",id:"SO/Docker/Imagens",title:"Imagens",description:"Uma imagem \xe9 um conjunto de aplica\xe7\xf5es, ferramentas, bibliotecas e depend\xeancias necess\xe1rias a execu\xe7\xe3o de uma aplica\xe7\xe3o espec\xedfica.",source:"@site/docs/SO/03-Docker/03-Imagens.mdx",sourceDirName:"SO/03-Docker",slug:"/SO/Docker/Imagens",permalink:"/materiais/docs/SO/Docker/Imagens",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/SO/03-Docker/03-Imagens.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"sidebarSO",previous:{title:"Containers",permalink:"/materiais/docs/SO/Docker/Containers"}},u={},s=[{value:"Dockerfile",id:"dockerfile",level:2},{value:"build",id:"build",level:2},{value:"CMD",id:"cmd",level:2},{value:"COPY",id:"copy",level:2},{value:"WORKDIR",id:"workdir",level:2},{value:"Refer\xeancias",id:"refer\xeancias",level:2}],c={toc:s},m="wrapper";function p(e){let{components:a,...t}=e;return(0,r.kt)(m,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"imagens"},"Imagens"),(0,r.kt)("p",null,"Uma ",(0,r.kt)("em",{parentName:"p"},"imagem")," \xe9 um conjunto de aplica\xe7\xf5es, ferramentas, bibliotecas e depend\xeancias necess\xe1rias a execu\xe7\xe3o de uma aplica\xe7\xe3o espec\xedfica."),(0,r.kt)("p",null,"No momento em que o container \xe9 criado, o Docker ir\xe1 procurar pela imagems na m\xe1quina local. Caso n\xe3o a encontre, ir\xe1 em seguida procurar no Docker Hub, que abordaremos mais adiante."),(0,r.kt)("p",null,"Para listarmos as imagens presentes no sistema utilizamos o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker images")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,r.kt)("p",null,"Sa\xedda:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REPOSITORY       TAG       IMAGE ID       CREATED              SIZE\nubuntu           latest    5a81c4b8502e   5 weeks ago          77.8MB\nhello-world      latest    9c7a54a9a43c   3 months ago         13.3kB\n")),(0,r.kt)("p",null,"Observe que as imagens possuem ",(0,r.kt)("inlineCode",{parentName:"p"},"REPOSITORY"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"TAG")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"IMAGE ID"),". O ",(0,r.kt)("inlineCode",{parentName:"p"},"ID")," da imagem \xe9 uma identifica\xe7\xe3o \xfanica. A ",(0,r.kt)("inlineCode",{parentName:"p"},"TAG")," pode indicar uma vers\xe3o, e ",(0,r.kt)("inlineCode",{parentName:"p"},"REPOSITORY")," corresponde ao nome da imagem. Nomes podem ser compostos por ",(0,r.kt)("inlineCode",{parentName:"p"},"<nome>")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"<user/nome>"),", que \xe9 o usu\xe1rio do Docker Hub que possui a imagem. Neste caso, ambas imagens s\xe3o oficiais do DockerHub, e por isso n\xe3o possuem um nome de usu\xe1rio."),(0,r.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,r.kt)("p",null,"Um ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," (por padr\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"D")," mai\xfascula e sem extesn\xe3o) \xe9 um arquivo texto que cont\xe9m as instru\xe7\xf5es a serem executadas para a cria\xe7\xe3o de uma imagem. Arquivos ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," s\xe3o lidos pelo comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker build"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Container com netcat")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},"FROM ubuntu\n\nRUN apt update\nRUN apt -y install netcat\n")),(0,r.kt)("h2",{id:"build"},"build"),(0,r.kt)("p",null,"Com este arquivo, podemos criar a nossa imagem, executando o comando abaixo no mesmo diret\xf3rio em que se encontra o arquivo Dockerfile."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker build .\n")),(0,r.kt)("p",null,"Este comando ir\xe1 executar e criar uma nova imagem. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,r.kt)("p",null,"Sa\xedda:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REPOSITORY       TAG       IMAGE ID       CREATED              SIZE\n<none>           <none>    89f07e07a89e   About a minute ago   121MB\nubuntu           latest    5a81c4b8502e   5 weeks ago          77.8MB\nhello-world      latest    9c7a54a9a43c   3 months ago         13.3kB\n")),(0,r.kt)("p",null,"Observe que uma nova imagem foi criada, por\xe9m est\xe1 sem nome e tag. Podemos passar estas informa\xe7\xf5es ao ",(0,r.kt)("inlineCode",{parentName:"p"},"docker build")," com o par\xe2metro ",(0,r.kt)("inlineCode",{parentName:"p"},"-t"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t netcat:1.0 .\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,r.kt)("p",null,"Sa\xedda:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REPOSITORY       TAG       IMAGE ID       CREATED          SIZE\nnetcat           0.1       89f07e07a89e   13 minutes ago   121MB\nubuntu           latest    5a81c4b8502e   5 weeks ago      77.8MB\nhello-world      latest    9c7a54a9a43c   3 months ago     13.3kB\n")),(0,r.kt)("p",null,"Em imagens j\xe1 criadas, podemos utilizar o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"docker tag"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker tag 89f07e07a89e netcat:0.2\ndocker tag 89f07e07a89e netcat\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker images\n")),(0,r.kt)("p",null,"Sa\xedda:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"REPOSITORY       TAG       IMAGE ID       CREATED          SIZE\nnetcat           0.1       89f07e07a89e   13 minutes ago   121MB\nnetcat           0.2       89f07e07a89e   13 minutes ago   121MB\nnetcat           latest    89f07e07a89e   13 minutes ago   121MB\nubuntu           latest    5a81c4b8502e   5 weeks ago      77.8MB\nhello-world      latest    9c7a54a9a43c   3 months ago     13.3kB\n")),(0,r.kt)("p",null,"Uma mesma imagem pode ter diversos nomes. Caso a tag seja omitida, Docker utilizar\xe1 a tag ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"latest")),", que \xe9 o container que ser\xe1 procurado caso a ",(0,r.kt)("em",{parentName:"p"},"tag")," seja omitida. Podemos observar que as imagens ",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"hello-world")," possuem a tag ",(0,r.kt)("em",{parentName:"p"},"latest"),"."),(0,r.kt)("p",null,"Agora que j\xe1 temos nossa imagem, podemos execut\xe1-la:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run --rm -it --name netcat -p 10100:10100 netcat:0.1 /bin/bash\n#no container:\nnc -l 10100\n")),(0,r.kt)("p",null,"Em outro terminal, tentaremos enviar dados ao nosso container. Execute:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'nc localhost 10100 <<< "Hello world"\n#<ctrl+c para fechar>\n')),(0,r.kt)("h2",{id:"cmd"},"CMD"),(0,r.kt)("p",null,"A instru\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"CMD")," no Dockerfile indica qual comando deve ser executado na cria\xe7\xe3o do container."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM ubuntu\n\nRUN apt update\nRUN apt -y install netcat\n\nCMD ["nc", "-l", "10100"]\n')),(0,r.kt)("p",null,"Com isto, ",(0,r.kt)("inlineCode",{parentName:"p"},"docker run")," saber\xe1 qual comando deve ser executado ao iniciar o container."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run --rm -it --name netcat -p 10100:10100 netcat:0.1\n")),(0,r.kt)("p",null,"Observe que aqui j\xe1 n\xe3o informamos o que deve ser executado. Em outro terminal, realizaremos novamente a comunica\xe7\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'nc localhost 10100 <<< "Hello world"\n#<ctrl+c para fechar>\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Atividade")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Desenvolva uma imagem com o nome ",(0,r.kt)("inlineCode",{parentName:"li"},"comp"),", e tag ",(0,r.kt)("inlineCode",{parentName:"li"},"1.0"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fa\xe7a com que quando um container da imagem ",(0,r.kt)("inlineCode",{parentName:"li"},"comp")," for executado, a mensagem ",(0,r.kt)("inlineCode",{parentName:"li"},"Ol\xe1 pessoal da computa\xe7\xe3o.")," seja mostrada.")))),(0,r.kt)("h2",{id:"copy"},"COPY"),(0,r.kt)("p",null,"A instru\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"COPY")," indica para ser realizada a c\xf3pia de um arquivo para dentro da imagem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxe")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"COPY <arquivo host> <local na imagem>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copia o arquivo ",(0,r.kt)("em",{parentName:"li"},"requirements.txt")," do diret\xf3rio local no ",(0,r.kt)("em",{parentName:"li"},"host")," para o diret\xf3rio ",(0,r.kt)("em",{parentName:"li"},"/root")," dentro da imagem.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"COPY requirements.txt /root\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Atividade")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Desenvolva uma imagem com nome ",(0,r.kt)("inlineCode",{parentName:"li"},"streamlit")," e tag ",(0,r.kt)("inlineCode",{parentName:"li"},"0.1"),", contendo as bibliotecas necess\xe1rias para execu\xe7\xe3o deste ",(0,r.kt)("em",{parentName:"li"},"framework")," Python.")),(0,r.kt)("h2",{id:"workdir"},"WORKDIR"),(0,r.kt)("p",null,"O ",(0,r.kt)("inlineCode",{parentName:"p"},"WORKDIR")," indica qual ser\xe1 o diret\xf3rio inicial em que o container ter\xe1 seu comando executado"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplos")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'FROM ubuntu\nWORKDIR /src\nCMD ["pwd"]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'FROM ubuntu\nWORKDIR /etc\nCMD ["ls"]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Atividades")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Crie um reposit\xf3rio no GitHub e coloque nele seu arquivo com o c\xf3digo python usando a biblioteca streamlit. Quando um container com a sua imagem for criado, o reposit\xf3rio deve ser clonado e o servidor streamlit com esse arquivo deve ser executado.")),(0,r.kt)("h2",{id:"refer\xeancias"},"Refer\xeancias"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/builder/"},"Docker. Dockerfile reference."))))}p.isMDXComponent=!0}}]);