"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[865],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>b});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),p=r,b=m["".concat(s,".").concat(p)]||m[p]||d[p]||o;return n?t.createElement(b,l(l({ref:a},c),{},{components:n})):t.createElement(b,l({ref:a},c))}));function b(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,a,n)=>{n.d(a,{Z:()=>l});var t=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:a,hidden:n,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:n},a)}},4866:(e,a,n)=>{n.d(a,{Z:()=>N});var t=n(7462),r=n(7294),o=n(6010),l=n(2466),i=n(6550),s=n(1980),u=n(7392),c=n(12);function m(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:n,attributes:t,default:r}}=e;return{value:a,label:n,attributes:t,default:r}}))}function d(e){const{values:a,children:n}=e;return(0,r.useMemo)((()=>{const e=a??m(n);return function(e){const a=(0,u.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,n])}function p(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function b(e){let{queryString:a=!1,groupId:n}=e;const t=(0,i.k6)(),o=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:a,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(t.location.search);a.set(o,e),t.replace({...t.location,search:a.toString()})}),[o,t])]}function g(e){const{defaultValue:a,queryString:n=!1,groupId:t}=e,o=d(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:a,tabValues:o}))),[s,u]=b({queryString:n,groupId:t}),[m,g]=function(e){let{groupId:a}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(a),[t,o]=(0,c.Nk)(n);return[t,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:t}),v=(()=>{const e=s??m;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var v=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:a,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),d=e=>{const a=e.currentTarget,n=c.indexOf(a),t=u[n].value;t!==i&&(m(a),s(t))},p=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;a=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;a=c[n]??c[c.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},a)},u.map((e=>{let{value:a,label:n,attributes:l}=e;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>c.push(e),onKeyDown:p,onClick:d},l,{className:(0,o.Z)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":i===a})}),n??a)})))}function k(e){let{lazy:a,children:n,selectedValue:t}=e;if(n=Array.isArray(n)?n:[n],a){const e=n.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==t}))))}function y(e){const a=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},r.createElement(f,(0,t.Z)({},e,a)),r.createElement(k,(0,t.Z)({},e,a)))}function N(e){const a=(0,v.Z)();return r.createElement(y,(0,t.Z)({key:String(a)},e))}},7727:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var t=n(7462),r=(n(7294),n(3905)),o=n(4866),l=n(5162);const i={},s="Blocos de c\xf3digo",u={unversionedId:"Algoritmos/Basicos/Blocos",id:"Algoritmos/Basicos/Blocos",title:"Blocos de c\xf3digo",description:"\xc9 comum em algoritmos e linguagens de programa\xe7\xe3o a delimita\xe7\xe3o de trechos de c\xf3digo. A tais delimita\xe7\xf5es chamamos de bloco.",source:"@site/docs/Algoritmos/02-Basicos/09-Blocos.md",sourceDirName:"Algoritmos/02-Basicos",slug:"/Algoritmos/Basicos/Blocos",permalink:"/materiais/docs/Algoritmos/Basicos/Blocos",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/Algoritmos/02-Basicos/09-Blocos.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"sidebarAlgoritmos",previous:{title:"Tipos, tamanhos e literais",permalink:"/materiais/docs/Algoritmos/Basicos/Tipos_tamanhos"},next:{title:"Express\xf5es",permalink:"/materiais/docs/Algoritmos/Basicos/Exercicios/Expressoes-exercicios"}},c={},m=[{value:"Organizando a leitura de dados",id:"organizando-a-leitura-de-dados",level:2}],d={toc:m},p="wrapper";function b(e){let{components:a,...n}=e;return(0,r.kt)(p,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"blocos-de-c\xf3digo"},"Blocos de c\xf3digo"),(0,r.kt)("p",null,"\xc9 comum em algoritmos e linguagens de programa\xe7\xe3o a delimita\xe7\xe3o de trechos de c\xf3digo. A tais delimita\xe7\xf5es chamamos de bloco."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo"),(0,r.kt)("br",{parentName:"p"}),"\n","O exemplo apresentado abaixo apresenta apenas a estrutura para defini\xe7\xe3o de c\xf3digos, ele n\xe3o faz parte da solu\xe7\xe3o de nenhum problema espec\xedfico. \xc9 apenas a ilustra\xe7\xe3o da subdivis\xe3o de um c\xf3digo em blocos."),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"portugol",label:"Portugol",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},"in\xedcio\n  //comando 1\n  //comando 2\n  // highlight-start\n  in\xedcio              //<-- In\xedcio do bloco\n      //comando 3\n      //comando 4\n      //comando 5\n  fim;                //<-- T\xe9rmino do bloco\n  // highlight-end\n  // comando 6\n  // comando 7\nfim.\n")),(0,r.kt)("p",null,"  Em portugol, os blocos s\xe3o delimitados por ",(0,r.kt)("inlineCode",{parentName:"p"},"in\xedcio")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"fim"),"."),(0,r.kt)("p",null,"  Adaptado de (",(0,r.kt)("a",{parentName:"p",href:"https://plataforma.bvirtual.com.br/Leitor/Publicacao/323/pdf/"},"Forbellone 2022, p. 43"),")")),(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"{\n // comando 1 ;\n // comando 2 ;\n // highlight-start\n {                   //<-- In\xedcio do bloco\n     // comando 3 ;\n     // comando 4 ;\n     // comando 5 ;\n }                   //<-- T\xe9rmino do bloco\n // highlight-end\n // comando 6 ;\n // comando 7 ;\n}\n")),(0,r.kt)("p",null,"  Em Java, os blocos s\xe3o delimitados pelas chaves ",(0,r.kt)("inlineCode",{parentName:"p"},"{")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),".")),(0,r.kt)(l.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"  # comando 1\n  # comando 2\n  # highlight-start\n      # comando 3     #<-- In\xedcio do bloco\n      # comando 4\n      # comando 5     #<-- T\xe9rmino do bloco\n  # highlight-end\n  # comando 6 ;\n  # comando 7 ;\n")),(0,r.kt)("p",null,"Em Python, os blocos s\xe3o definidos pela indenta\xe7\xe3o do c\xf3digo, ou seja, pelo alinhamento no in\xedcio de cada linha do c\xf3digo. Este alinhamento pode ser feito por caracteres ",(0,r.kt)("em",{parentName:"p"},"tab")," ou ",(0,r.kt)("em",{parentName:"p"},"espa\xe7os"),".")),(0,r.kt)(l.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},"{\n // comando 1 ;\n // comando 2 ;\n // highlight-start\n {                   //<-- In\xedcio do bloco\n     // comando 3 ;\n     // comando 4 ;\n     // comando 5 ;\n }                   //<-- T\xe9rmino do bloco\n // highlight-end\n // comando 6 ;\n // comando 7 ;\n}\n")),(0,r.kt)("p",null,"  Em C, os blocos s\xe3o delimitados pelas chaves ",(0,r.kt)("inlineCode",{parentName:"p"},"{")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),"."))),(0,r.kt)("p",null,"A ideia \xe9 que os blocos agrupem determinadas tarefas dentro do c\xf3digo."),(0,r.kt)("h2",{id:"organizando-a-leitura-de-dados"},"Organizando a leitura de dados"),(0,r.kt)("p",null,"A modulariza\xe7\xe3o consiste em ",(0,r.kt)("strong",{parentName:"p"},"reaproveitar")," c\xf3digo repetitivos, e ser\xe1 discutida em detalhes posteriormente quando abordarmos os ",(0,r.kt)("strong",{parentName:"p"},"procedientos")," e as ",(0,r.kt)("strong",{parentName:"p"},"fun\xe7\xf5es"),". Por\xe9m, j\xe1 podemos realizar uma breve introdu\xe7\xe3o e utiliz\xe1-la, com a finalidade de organizar nosso c\xf3digo."),(0,r.kt)("p",null,"Podemos separar regi\xf5es do nosso c\xf3digo que sabemos que sempre ser\xe3o repetidas. Por exemplo, para leitura de dados."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Leitura de um valor inteiro, organizado em m\xf3dulo")),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"portugol",label:"Portugol",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},""))),(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"import java.util.Scanner;\npublic class Main{\n\n static Scanner entrada;\n\n //M\xf3dulo para abrir a entrada\n public static void entradaAbrir(){\n   entrada = new Scanner(System.in);\n }\n\n //M\xf3dulo para fechar a entrada\n public static void entradaFechar(){\n   entrada.close();\n }\n\n //M\xf3dulo para ler um valor inteiro\n public static int lerInt(){\n   return entrada.nextInt();\n }\n\n public static void main(String[] args){\n   //vari\xe1veis\n   int valor;\n\n   //Executa o m\xf3dulo que abre a entrada\n   entradaAbrir();\n\n   //Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n   valor = lerInt();\n\n   //Executa o m\xf3dulo que fecha a entrada\n   entradaFechar();\n }\n}\n"))),(0,r.kt)(l.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'#M\xf3dulo para ler um valor inteiro\ndef lerInt():\n  return int(input())\n\nif __name__ == "__main__":\n\n  #Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n  valor = lerInt()\n  \n'))),(0,r.kt)(l.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},"#include <stdio.h>\n\n//M\xf3dulo para ler um valor inteiro\nint lerInt(void){\n  int valor_lido;\n  scanf(&valor_lido);\n  return valor_lido;\n}\n\nint main(){\n  int valor;\n\n  //Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n  valor = lerInt();\n}\n")))),(0,r.kt)("p",null,"Esta pr\xe1tica ainda pode ser melhorada. Quando for realizada a leitura de um valor, podemos programar para que uma mensagem seja mostrada antes que o valor seja digitado."),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"portugol",label:"Portugol",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},""))),(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},'import java.util.Scanner;\npublic class Main{\n\n final static entrada;\n\n //M\xf3dulo para abrir a entrada\n public static void entradaAbrir(){\n   entrada = new Scanner(System.in);\n }\n\n //M\xf3dulo para fechar a entrada\n public static void entradaFechar(){\n   entrada.close();\n }\n\n //M\xf3dulo para ler um valor inteiro\n public static int lerInt(){\n   return entrada.nextInt();\n }\n\n //M\xf3dulo para ler um valor inteiro e mostrar uma mensagem\n public static int lerInt(String mensagem){\n   //mostra a mensagem\n   System.out.println(mensagem);\n   //l\xea o valor e o retorna para que seja atribu\xeddo \xe0 vari\xe1vel\n   return entrada.nextInt();\n }\n\n public static void main(String[] args){\n   //vari\xe1veis\n   int valor;\n\n   //Executa o m\xf3dulo que abre a entrada\n   entradaAbrir();\n\n   //Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n   valor = lerInt("Entre com um n\xfamero inteiro:");\n\n   //Executa o m\xf3dulo que fecha a entrada\n   entradaFechar();\n }\n}\n'))),(0,r.kt)(l.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'#M\xf3dulo para ler um valor inteiro e mostrar uma mensagem\ndef lerInt(mensagem=""):\n  return int(input(mensagem))\n\nif __name__ == "__main__":\n\n  #Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n  valor = lerInt("Entre com um n\xfamero inteiro: ")\n  \n'))),(0,r.kt)(l.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c",metastring:"showLineNumbers",showLineNumbers:!0},'#include <stdio.h>\n\n//M\xf3dulo para ler um valor inteiro\nint lerInt(void){\n  int valor_lido;\n  scanf(&valor_lido);\n  return valor_lido;\n}\n//M\xf3dulo para ler um valor inteiro e mostrar uma mensagem\nint lerIntMsg(char[] mensagem){\n  int valor_lido;\n  //mostra a mensagem\n  printf("%s\\n", mensagem);\n  //l\xea o valor\n  scanf(&valor_lido);\n  //retorna o valor para que seja atribu\xeddo \xe0 vari\xe1vel\n  return valor_lido;\n}\n\nint main(){\n  int valor;\n\n  //Executa o m\xf3dulo que realiza a leitura de um valor inteiro\n  valor = lerInt("Entre com um n\xfamero inteiro: ");\n}\n')))))}b.isMDXComponent=!0}}]);