"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[7480],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>k});var o=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var p=o.createContext({}),s=function(e){var a=o.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=s(e.components);return o.createElement(p.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},c=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),c=t,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||r;return n?o.createElement(k,l(l({ref:a},u),{},{components:n})):o.createElement(k,l({ref:a},u))}));function k(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[m]="string"==typeof e?e:t,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,a,n)=>{n(7294)},5488:(e,a,n)=>{n(7294),n(2389)},8283:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=n(7462),t=(n(7294),n(3905));n(5488),n(5162);const r={},l="Containers",i={unversionedId:"SO/Docker/Containers",id:"SO/Docker/Containers",title:"Containers",description:"Para a execu\xe7\xe3o de um comando docker, a sintaxe geral \xe9:",source:"@site/docs/SO/03-Docker/02-Containers.mdx",sourceDirName:"SO/03-Docker",slug:"/SO/Docker/Containers",permalink:"/materiais/docs/SO/Docker/Containers",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/SO/03-Docker/02-Containers.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebarSO",previous:{title:"Introdu\xe7\xe3o",permalink:"/materiais/docs/SO/Docker/Intro"},next:{title:"Imagens",permalink:"/materiais/docs/SO/Docker/Imagens"}},p={},s=[{value:"run",id:"run",level:2},{value:"ps",id:"ps",level:2},{value:"start",id:"start",level:2},{value:"-it",id:"-it",level:2},{value:"stop",id:"stop",level:2},{value:"rm",id:"rm",level:2},{value:"pause unpause",id:"pause-unpause",level:2},{value:"portas",id:"portas",level:2},{value:"create",id:"create",level:2}],u={toc:s},m="wrapper";function d(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,o.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"containers"},"Containers"),(0,t.kt)("p",null,"Para a execu\xe7\xe3o de um comando docker, a sintaxe geral \xe9:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker <par\xe2metros>\n")),(0,t.kt)("p",null,"Um ",(0,t.kt)("em",{parentName:"p"},"container")," \xe9 uma inst\xe2ncia de uma ",(0,t.kt)("em",{parentName:"p"},"imagem"),". Podemos fazer uma analogia dos containers e imagens com os objetos e classes da orienta\xe7\xe3o a objetos. Para que um container possa ser executado, \xe9 necess\xe1rio que seja informado a partir de qual imagem ele deve ser executado."),(0,t.kt)("h2",{id:"run"},"run"),(0,t.kt)("p",null,"Para criar um container, utilizamos ",(0,t.kt)("inlineCode",{parentName:"p"},"docker run"),"."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("em",{parentName:"li"},"Hello world"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run hello-world\n")),(0,t.kt)("p",null,"Neste caso, o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"run")," indica que um container ser\xe1 criado a partir da imagem ",(0,t.kt)("inlineCode",{parentName:"p"},"hello-world"),"."),(0,t.kt)("p",null,"Observe que o container \xe9 criado, executado e encerrado."),(0,t.kt)("h2",{id:"ps"},"ps"),(0,t.kt)("p",null,"Para observarmos os containers em execu\xe7\xe3o:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker container ps\n")),(0,t.kt)("p",null,"ou ent\xe3o, de maneira simplificada:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,t.kt)("p",null,"Caso a sa\xedda esteja vazia, \xe9 porque n\xe3o h\xe1 nenhum container em execu\xe7\xe3o no momento."),(0,t.kt)("p",null,"Para que sejam visualizados todos os containers:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,t.kt)("p",null,"Sa\xedda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                          PORTS                                            NAMES\n3b9de5ab5855   hello-world          "/hello"                 20 minutes ago   Exited (0) About a minute ago                                                    upbeat_euler\n')),(0,t.kt)("p",null,"Algumas podem ser observadas aqui:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"CONTAINER ID"),": identifica\xe7\xe3o \xfanica do container, gerada automaticamente;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"IMAGE"),": Imagem utilizada para o container"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"COMMANDO"),": Comando executado ao inicializar o container"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"NAMES"),": Nome \xfanico para o conteiner.")),(0,t.kt)("p",null,"O nome do container pode ser informado durante a cria\xe7\xe3o do container, utilizando o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"--name"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name hello hello-world\n")),(0,t.kt)("p",null,"Ap\xf3s a execu\xe7\xe3o, podemos visualizar o que foi criado:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,t.kt)("p",null,"Sa\xedda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                         PORTS                                            NAMES\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                                                        hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                                                        upbeat_euler\n')),(0,t.kt)("p",null,"Observe que um novo ",(0,t.kt)("inlineCode",{parentName:"p"},"CONTAINER ID")," foi gerado, e o nome do container foi o informado (",(0,t.kt)("inlineCode",{parentName:"p"},"hello"),")."),(0,t.kt)("h2",{id:"start"},"start"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker start <id ou nome do container>\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker start 3da575d7b1b5\n")),(0,t.kt)("p",null,"Neste caso, nada foi mostrado na tela porque por padr\xe3o o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"start")," coloca o container para execu\xe7\xe3o em segundo plano. Para que possamos visualizar a sa\xedda, precisamos informar o par\xe2metro ",(0,t.kt)("em",{parentName:"p"},"attach")," ",(0,t.kt)("inlineCode",{parentName:"p"},"-a"),"."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker start -a 3da575d7b1b5\n")),(0,t.kt)("h2",{id:"-it"},"-it"),(0,t.kt)("p",null,"No exemplo do ",(0,t.kt)("em",{parentName:"p"},"hello-world"),", n\xe3o h\xe1 intera\xe7\xe3o com o container. Por\xe9m, \xe9 poss\xedvel interagir com terminais dentro do container, com os par\xe2metros ",(0,t.kt)("inlineCode",{parentName:"p"},"-t")," (terminal) e ",(0,t.kt)("inlineCode",{parentName:"p"},"-i")," (interativo). Estes par\xe2metros podem ser agrupados, formando ",(0,t.kt)("inlineCode",{parentName:"p"},"-ti")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Shell em um container ubuntu")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -ti ubuntu /bin/bash\n")),(0,t.kt)("p",null,"Neste caso, foi aberto um terminal bash dentro do container."),(0,t.kt)("p",null,"Em uma nova janela (novo terminal), vamos observar os containers em execu\xe7\xe3o."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,t.kt)("p",null,"Sa\xedda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS         PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              7 seconds ago   Up 7 seconds                            interesting_jang\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago               upbeat_euler\n')),(0,t.kt)("p",null,"Observe que agora o container em execu\xe7\xe3o aparece listado."),(0,t.kt)("h2",{id:"stop"},"stop"),(0,t.kt)("p",null,"A execu\xe7\xe3o de um container pode ser interrompida com o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"stop"),". Utilizaremos o exemplo anterior."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop interesting_jang\ndocker ps -a\n")),(0,t.kt)("p",null,"Sa\xedda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                        PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              15 minutes ago   Exited (137) 10 seconds ago                            interesting_jang\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,t.kt)("p",null,"Um container que foi parado com o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"stop")," pode ser iniciado novamente com o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"start"),". Por\xe9m, caso o container seja interativo \xe9 necess\xe1rio passar novamente o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"-i")," novamente para que o terminal do container seja novamente ligado ao terminal do usu\xe1rio."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker start -i interesting_jang\n")),(0,t.kt)("p",null,"Para sair, digite ",(0,t.kt)("inlineCode",{parentName:"p"},"exit"),". Em seguida, visualize os containeres criados."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Sa\xedda:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                     PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              22 minutes ago   Exited (0) 2 seconds ago                            interesting_jang\n')),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Atividade")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Observe o valor de ",(0,t.kt)("inlineCode",{parentName:"li"},"Exited"),", na coluna ",(0,t.kt)("inlineCode",{parentName:"li"},"STATUS"),". O que h\xe1 de diferente nas diversas vezes que o container com ubuntu foi execuado?"),(0,t.kt)("li",{parentName:"ul"},"Por qu\xea os valores s\xe3o diferentes?")),(0,t.kt)("h2",{id:"rm"},"rm"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"docker rm <id ou nome do container>\n")),(0,t.kt)("p",null,"Para que um container possa ser removido, este n\xe3o pode estar em execu\xe7\xe3o."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm interesting_jang\n")),(0,t.kt)("p",null,"Para visualizar:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'docker ps -a\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,t.kt)("p",null,"Observe que o container n\xe3o existe mais."),(0,t.kt)("p",null,"No momento da cria\xe7\xe3o de um container com o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"run"),", \xe9 poss\xedvel informar que o container seja removido ap\xf3s a finaliza\xe7\xe3o de sua execu\xe7\xe3o com o uso do par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"--rm"),"."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -it ubuntu /bin/bash\n")),(0,t.kt)("p",null,"Digite ",(0,t.kt)("inlineCode",{parentName:"p"},"exit")," para sair do container, e em seguida observe os containers:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,t.kt)("p",null,"Sa\xedda:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                      PORTS                    NAMES\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,t.kt)("p",null,"Como pode ser observado, o container com a imagem ubuntu n\xe3o est\xe1 na lista, que foi removido quando finalizado."),(0,t.kt)("h2",{id:"pause-unpause"},"pause unpause"),(0,t.kt)("p",null,"\xc9 poss\xedvel paralisar a execu\xe7\xe3o de um container sem finaliz\xe1-lo, com os comandos ",(0,t.kt)("inlineCode",{parentName:"p"},"pause")," e ",(0,t.kt)("inlineCode",{parentName:"p"},"unpause"),"."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Em um terminal, crie um container chamado ",(0,t.kt)("em",{parentName:"li"},"counter")," com um bash em ubuntu e gere um contador que apresenta valores em um la\xe7o de repeti\xe7\xe3o, com espera de 1 segundo em cada itera\xe7\xe3o.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -ti --name counter ubuntu /bin/bash\n")),(0,t.kt)("p",null,"No container:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"i=0\nwhile true\ndo\necho $i\nsleep 1s\nlet i++\ndone\n")),(0,t.kt)("p",null,"Observe que o contador mostra o valor de maneira ininterrupta, a cada 1 segundo. Abra um outro terminal, e pause o container ",(0,t.kt)("em",{parentName:"p"},"counter"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker pause counter\n")),(0,t.kt)("p",null,"Observe que o contador parou. Para que possa continar, podemos utilizar o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"unpause"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker unpause counter\n")),(0,t.kt)("h2",{id:"portas"},"portas"),(0,t.kt)("p",null,"\xc9 poss\xedvel realizar a comunica\xe7\xe3o com um container utilizando portas de comunica\xe7\xe3o. Para tal, as portas devem ser informadas durante a cria\xe7\xe3o do container utilizando o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"-p"),". Sua sintaxe \xe9 ",(0,t.kt)("inlineCode",{parentName:"p"},"-p <porta host>:<porta container>")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Exemplo")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -ti -p 10000:10100 ubuntu /bin/bash\n")),(0,t.kt)("p",null,"Neste caso, uma comunica\xe7\xe3o do ",(0,t.kt)("em",{parentName:"p"},"host")," local na porta 10000 ir\xe1 redirecional esse conta\xfado para dentro do container na porta 10000. "),(0,t.kt)("p",null,"Vamos explorar melhor este exemplo. Instalaremos no container a aplica\xe7\xe3o ",(0,t.kt)("em",{parentName:"p"},"netcat"),", que permite realizar a troca de dados utilizando portas TCP. No container, execute:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"apt update && apt -y install netcat\nnc -l 10100\n")),(0,t.kt)("p",null,"Neste ponto, o ",(0,t.kt)("em",{parentName:"p"},"netcat")," est\xe1 aguardando conex\xf5es na porta ",(0,t.kt)("inlineCode",{parentName:"p"},"10100"),"."),(0,t.kt)("p",null,"Abra um outro terminal e execute:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},'nc localhost 10000 <<< "Hello World!"\n')),(0,t.kt)("p",null,"Observe que na m\xe1quina ",(0,t.kt)("em",{parentName:"p"},"host")," o conte\xfado foi enviado \xe0 porta ",(0,t.kt)("inlineCode",{parentName:"p"},"10000"),", enquanto que este valor foi recebido dentro do container na porta ",(0,t.kt)("inlineCode",{parentName:"p"},"10100"),". Isto d\xe1-se pelo redirecionamento da porta pelo Docker. Este mecanismo de redirecionamento ocorre porque a mesma porta do ",(0,t.kt)("em",{parentName:"p"},"host")," n\xe3o pode ser utilizada para mais de um servi\xe7o. Com isto, podemos ter diversos containers que ouvem em determinada porta (diversos servidores web na porta 80, p.ex.), e estes servidores s\xe3o acessados pelo ",(0,t.kt)("em",{parentName:"p"},"host")," utilizando diferentes portas externas, como (8080, 8081, 8082, p.ex.)"),(0,t.kt)("h2",{id:"create"},"create"),(0,t.kt)("p",null,"Anteriormente vimos que o ",(0,t.kt)("inlineCode",{parentName:"p"},"docker run")," cria e executa um container. Estes passos tamb\xe9m podem ser executados de maneira separada, com ",(0,t.kt)("inlineCode",{parentName:"p"},"docker create"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'docker create --name hello hello-world\ndocker ps -a\n#CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS       PORTS                    NAMES\n#b39f77f25849   hello-world          "/hello"                 15 seconds ago   Created                               hello\n\ndocker start -a hello\n')))}d.isMDXComponent=!0}}]);