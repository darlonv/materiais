"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[6659],{3905:(e,o,a)=>{a.d(o,{Zo:()=>u,kt:()=>g});var t=a(67294);function r(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function n(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?n(Object(a),!0).forEach((function(o){r(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,t,r=function(e,o){if(null==e)return{};var a,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||(r[a]=e[a]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)a=n[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),d=function(e){var o=t.useContext(l),a=o;return e&&(a="function"==typeof e?e(o):s(s({},o),e)),a},u=function(e){var o=d(e.components);return t.createElement(l.Provider,{value:o},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},m=t.forwardRef((function(e,o){var a=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(a),m=r,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||n;return a?t.createElement(g,s(s({ref:o},u),{},{components:a})):t.createElement(g,s({ref:o},u))}));function g(e,o){var a=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=m;var i={};for(var l in o)hasOwnProperty.call(o,l)&&(i[l]=o[l]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<n;d++)s[d]=a[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,o,a)=>{a.d(o,{Z:()=>s});var t=a(67294),r=a(86010);const n={tabItem:"tabItem_Ymn6"};function s(e){let{children:o,hidden:a,className:s}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(n.tabItem,s),hidden:a},o)}},74866:(e,o,a)=>{a.d(o,{Z:()=>h});var t=a(87462),r=a(67294),n=a(86010),s=a(12466),i=a(16550),l=a(91980),d=a(67392),u=a(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:o,label:a,attributes:t,default:r}}=e;return{value:o,label:a,attributes:t,default:r}}))}function p(e){const{values:o,children:a}=e;return(0,r.useMemo)((()=>{const e=o??c(a);return function(e){const o=(0,d.l)(e,((e,o)=>e.value===o.value));if(o.length>0)throw new Error(`Docusaurus error: Duplicate values "${o.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[o,a])}function m(e){let{value:o,tabValues:a}=e;return a.some((e=>e.value===o))}function g(e){let{queryString:o=!1,groupId:a}=e;const t=(0,i.k6)(),n=function(e){let{queryString:o=!1,groupId:a}=e;if("string"==typeof o)return o;if(!1===o)return null;if(!0===o&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:o,groupId:a});return[(0,l._X)(n),(0,r.useCallback)((e=>{if(!n)return;const o=new URLSearchParams(t.location.search);o.set(n,e),t.replace({...t.location,search:o.toString()})}),[n,t])]}function v(e){const{defaultValue:o,queryString:a=!1,groupId:t}=e,n=p(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:o,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(o){if(!m({value:o,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${o}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return o}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:o,tabValues:n}))),[l,d]=g({queryString:a,groupId:t}),[c,v]=function(e){let{groupId:o}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(o),[t,n]=(0,u.Nk)(a);return[t,(0,r.useCallback)((e=>{a&&n.set(e)}),[a,n])]}({groupId:t}),b=(()=>{const e=l??c;return m({value:e,tabValues:n})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),v(e)}),[d,v,n]),tabValues:n}}var b=a(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function _(e){let{className:o,block:a,selectedValue:i,selectValue:l,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),p=e=>{const o=e.currentTarget,a=u.indexOf(o),t=d[a].value;t!==i&&(c(o),l(t))},m=e=>{let o=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;o=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;o=u[a]??u[u.length-1];break}}o?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},o)},d.map((e=>{let{value:o,label:a,attributes:s}=e;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:i===o?0:-1,"aria-selected":i===o,key:o,ref:e=>u.push(e),onKeyDown:m,onClick:p},s,{className:(0,n.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":i===o})}),a??o)})))}function k(e){let{lazy:o,children:a,selectedValue:t}=e;if(a=Array.isArray(a)?a:[a],o){const e=a.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,o)=>(0,r.cloneElement)(e,{key:o,hidden:e.props.value!==t}))))}function y(e){const o=v(e);return r.createElement("div",{className:(0,n.Z)("tabs-container",f.tabList)},r.createElement(_,(0,t.Z)({},e,o)),r.createElement(k,(0,t.Z)({},e,o)))}function h(e){const o=(0,b.Z)();return r.createElement(y,(0,t.Z)({key:String(o)},e))}},23763:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=a(87462),r=(a(67294),a(3905)),n=a(74866),s=a(85162);const i={},l="Registros",d={unversionedId:"Algoritmos/Vetores_e_registros/Registros",id:"Algoritmos/Vetores_e_registros/Registros",title:"Registros",description:"Um registro \xe9 uma vari\xe1vel composta heterog\xeanea, em que podemos observ\xe1-la como um conjunto de elementos que podem ser de tipos distintos (diferente dos vetores e matrizes). Dizemos que cada um destes elementos \xe9 um campo, e conjunto dos campos forma o registro.",source:"@site/docs/Algoritmos/06-Vetores_e_registros/04-Registros.md",sourceDirName:"Algoritmos/06-Vetores_e_registros",slug:"/Algoritmos/Vetores_e_registros/Registros",permalink:"/materiais/docs/Algoritmos/Vetores_e_registros/Registros",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/Algoritmos/06-Vetores_e_registros/04-Registros.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"sidebarAlgoritmos",previous:{title:"Matrizes",permalink:"/materiais/docs/Algoritmos/Vetores_e_registros/Matrizes"},next:{title:"Vetores",permalink:"/materiais/docs/Algoritmos/Vetores_e_registros/Exerc\xedcios/Vetores"}},u={},c=[],p={toc:c},m="wrapper";function g(e){let{components:o,...a}=e;return(0,r.kt)(m,(0,t.Z)({},p,a,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"registros"},"Registros"),(0,r.kt)("p",null,"Um registro \xe9 uma vari\xe1vel composta heterog\xeanea, em que podemos observ\xe1-la como um conjunto de elementos que podem ser de tipos distintos (diferente dos vetores e matrizes). Dizemos que cada um destes elementos \xe9 um ",(0,r.kt)("strong",{parentName:"p"},"campo"),", e conjunto dos ",(0,r.kt)("strong",{parentName:"p"},"campos")," forma o ",(0,r.kt)("strong",{parentName:"p"},"registro"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Problema")," "),(0,r.kt)("p",null,"Considere como exemplo a seguinte situa\xe7\xe3o: \xe9 necess\xe1rio armazenar informa\xe7\xf5es sobre um produto determinado, que possui dados como descri\xe7\xe3o (caractere), lote (inteiro) e peso (real). Neste momento inicial apenas observaremos as vari\xe1veis necess\xe1rias e seus tipos, sem valores, processamento ou sa\xedda."),(0,r.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"inicio;\n  //vari\xe1veis\n  caractere: descricao;\n  inteiro: lote;\n  real: peso;\nfim.\n"))),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"public static void main(String[] args){\n  //vari\xe1veis\n  String descricao;\n  int lote;\n  float peso;\n}\n"))),(0,r.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"descricao = ''\nlote = 0\npeso = 0.o\n")))),(0,r.kt)("p",null,"Imagine agora que surgiu a necessidade de armazenar a informa\xe7\xe3o de mais dois produtos, ou seja, temos prod_1, prod_2 e prod_3. Ser\xe1 ent\xe3o necess\xe1rio armazenar as informa\xe7\xf5es de descri\xe7\xe3o, lote e peso para cada produto. Uma poss\xedvel implementa\xe7\xe3o seria:"),(0,r.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"inicio;\n  //vari\xe1veis\n  caractere: prod_1_descricao, prod_2_descricao, prod_3_descricao;\n  inteiro: prod_1_lote, prod_2_lote, prod_3_lote;\n  real: prod_1_peso, prod_2_peso, prod_3_peso;\nfim.\n"))),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"public static void main(String[] args){\n  //vari\xe1veis\n  String prod_1_descricao, prod_2_descricao, prod_3_descricao;\n  int prod_1_lote, prod_2_lote, prod_3_lote;\n  float prod_1_peso, prod_2_peso, prod_3_peso;\n}\n"))),(0,r.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"prod_1_descricao = 0, prod_2_descricao = 0, prod_3_descricao = 0\nprod_1_lote, prod_2_lote, prod_3_lote = 0\nprod_1_peso = 0.0, prod_2_peso = 0.0, prod_3_peso = 0.0\n")))),(0,r.kt)("p",null,"Observe que o problema est\xe1 em que \xe9 necess\xe1rio declarar uma a uma das vari\xe1veis correspondentes a cada produto."),(0,r.kt)("p",null,"Isto pode ser entendido como cada produto sendo um grupo de vari\xe1veis, ou seja, um registro com um grupo de campos. Com isto, cada novo produto \xe9 composto por um registro."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sintaxe")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Para definir um registro, utilizamos a seguinte sintaxe:")),(0,r.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"tipo <nome do registro> = registro\n                            <tipo do dado>: <nome do campo>;\n                          fimregistro\n"))),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"public class <NomeDoRegistro> {\n  <tipo do dado> <nome do campo>;\n}\n")),(0,r.kt)("admonition",{title:"Aten\xe7\xe3o",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"  Em Java, utilizaremos o conceito de ",(0,r.kt)("strong",{parentName:"p"},"classes")," como registros, visto que atende aqui nossa finalidade did\xe1tica. Classes fazem parte do paradigma de orienta\xe7\xe3o a objetos, e possuem outras funcionalidades e finaliadades. Aqui estamos chamando de registros e seus campos, por\xe9m na verdade estamos utilizando classes e seus atributos."),(0,r.kt)("p",{parentName:"admonition"},"  Em Java h\xe1 tamb\xe9m o tipo ",(0,r.kt)("strong",{parentName:"p"},"record"),", que funciona como um registro. Por\xe9m, n\xe3o ser\xe1 abordado neste material devido \xe0 sua caracter\xedstica de imutabilidade."))),(0,r.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from dataclasses import dataclass\n\n@dataclass\nclass <NomeDoRegistro>:\n  <nome do campo>\n")),(0,r.kt)("admonition",{title:"Aten\xe7\xe3o",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"  Em Python, utilizaremos as ",(0,r.kt)("strong",{parentName:"p"},"classes"),", como registros, visto que atende aqui nossa finalidade did\xe1tica. Classes s\xe3o parte do paradigma de orienta\xe7\xe3o a objetos, e possui muitas outras funcionalidades e finalidades. Aqui estamos chamando de registros e seus campos, por\xe9m na verdade estamos utilizando classes e seus atributos.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo"),"  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Declara\xe7\xe3o de produtos utilizando registros:")),(0,r.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"//especifica\xe7\xe3o do registro\ntipo Produto  = registro\n                  caractere: descricao;\n                  inteiro: lote;\n                  real: peso;\n                fimregistro;\n\n//declara\xe7\xe3o da vari\xe1vel do tipo do registro\nProduto prod_1, prod_2, prod_3;\n\n"))),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"class Produto {\n  String descricao;\n  int lote;\n  float peso;\n}\n\npublic class Main{\n  public static void main(String[] args){\n    //Declara\xe7\xe3o das vari\xe1veis do tipo do registro\n    Produto prod_1 = new Produto();\n    Produto prod_2 = new Produto();\n    Produto prod_3 = new Produto();\n  }\n}\n"))),(0,r.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from dataclasses import dataclass\n\n@dataclass\nclass Produto:\n  descricao = ""\n  lote = 0\n  peso = 0.0\n')))),(0,r.kt)("p",null,"Assim como nos vetores e matrizes, cada elemento pode acessado de maneira individual.  O acesso aos campos de cada registro \xe9 realizado utilizando ",(0,r.kt)("inlineCode",{parentName:"p"},".")," (ponto)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exemplo")),(0,r.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'inicio\n//especifica\xe7\xe3o do registro\ntipo Produto  = registro\n                  caractere: descricao;\n                  inteiro: lote;\n                  real: peso;\n                fimregistro;\n\n//declara\xe7\xe3o da vari\xe1vel do tipo do registro\nProduto prod_1, prod_2, prod_3;\n\n//defini\xe7\xe3o dos valores a cada campo\nprod_1.descricao \u2190 "leite";\nprod_1.lote \u2190 100;\nprod_1.peso \u2190 0.750;\n\nprod_2.descricao = "chocolate";\nprod_2.lote \u2190 84;\nprod_3.peso \u2190 0.150;\n\nprod_3.descricao \u2190 "agua mineral";\nprod_3.lote \u2190 502;\nprod_3.peso \u2190 0.450;\n\n'))),(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'class Produto {\n  String descricao;\n  int lote;\n  float peso;\n}\n\npublic class Main{\n  public static void main(String[] args){\n    //Declara\xe7\xe3o das vari\xe1veis do tipo do registro\n    Produto prod_1 = new Produto();\n    Produto prod_2 = new Produto();\n    Produto prod_3 = new Produto();\n\n    //defini\xe7\xe3o dos valores a cada campo\n    prod_1.descricao = "leite";\n    prod_1.lote = 100;\n    prod_1.peso = 0.750f;\n\n    prod_2.descricao = "chocolate";\n    prod_2.lote = 84;\n    prod_3.peso = 0.150f;\n\n    prod_3.descricao = "agua mineral";\n    prod_3.lote = 502;\n    prod_3.peso = 0.450f;\n  }\n}\n'))),(0,r.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from dataclasses import dataclass\n\n@dataclass\nclass Produto:\n  descricao = ""\n  lote = 0\n  peso = 0.0\n\n#vari\xe1veis\nprod_1 = Produto()\nprod_2 = Produto()\nprod_3 = Produto()\n\n#defini\xe7\xe3o dos valores a cada campo\nprod_1.descricao = "leite"\nprod_1.lote = 100\nprod_1.peso = 0.750\n\nprod_2.descricao = "chocolate"\nprod_2.lote = 84\nprod_3.peso = 0.150\n\nprod_3.descricao = "agua mineral"\nprod_3.lote = 502\nprod_3.peso = 0.450\n')))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Exerc\xedcios")))}g.isMDXComponent=!0}}]);