"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[9535],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>g});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),d=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},u=function(e){var a=d(e.components);return n.createElement(l.Provider,{value:a},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(t),m=o,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||r;return t?n.createElement(g,s(s({ref:a},u),{},{components:t})):n.createElement(g,s({ref:a},u))}));function g(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=t[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(7294),o=t(6010);const r={tabItem:"tabItem_Ymn6"};function s(e){let{children:a,hidden:t,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,s),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>h});var n=t(7462),o=t(7294),r=t(6010),s=t(2466),i=t(6550),l=t(1980),d=t(7392),u=t(12);function c(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:o}}=e;return{value:a,label:t,attributes:n,default:o}}))}function p(e){const{values:a,children:t}=e;return(0,o.useMemo)((()=>{const e=a??c(t);return function(e){const a=(0,d.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function m(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function g(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.k6)(),r=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const a=new URLSearchParams(n.location.search);a.set(r,e),n.replace({...n.location,search:a.toString()})}),[r,n])]}function v(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,r=p(e),[s,i]=(0,o.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:r}))),[l,d]=g({queryString:t,groupId:n}),[c,v]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,r]=(0,u.Nk)(t);return[n,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:n}),f=(()=>{const e=l??c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),v(e)}),[d,v,r]),tabValues:r}}var f=t(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:a,block:t,selectedValue:i,selectValue:l,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),p=e=>{const a=e.currentTarget,t=u.indexOf(a),n=d[t].value;n!==i&&(c(a),l(n))},m=e=>{let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;a=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;a=u[t]??u[u.length-1];break}}a?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},a)},d.map((e=>{let{value:a,label:t,attributes:s}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>u.push(e),onKeyDown:m,onClick:p},s,{className:(0,r.Z)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":i===a})}),t??a)})))}function S(e){let{lazy:a,children:t,selectedValue:n}=e;if(t=Array.isArray(t)?t:[t],a){const e=t.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,o.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function C(e){const a=v(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",k.tabList)},o.createElement(b,(0,n.Z)({},e,a)),o.createElement(S,(0,n.Z)({},e,a)))}function h(e){const a=(0,f.Z)();return o.createElement(C,(0,n.Z)({key:String(a)},e))}},5153:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var n=t(7462),o=(t(7294),t(3905)),r=t(4866),s=t(5162);const i={},l="M\xfaltipla escolha",d={unversionedId:"Algoritmos/Controle/Multipla",id:"Algoritmos/Controle/Multipla",title:"M\xfaltipla escolha",description:"Em situa\xe7\xf5es em que precisamos testar diversos valores pontuais, poder\xedamos utilizar a diversas express\xf5es se encadeadas, formando uma sele\xe7\xe3o encadeada do tipo se-sen\xe3o-se, e testar os poss\xedveis valores.",source:"@site/docs/Algoritmos/04-Controle/03-Multipla.md",sourceDirName:"Algoritmos/04-Controle",slug:"/Algoritmos/Controle/Multipla",permalink:"/materiais/docs/Algoritmos/Controle/Multipla",draft:!1,editUrl:"https://github.com/darlonv/algoritmos/tree/main/docs/Algoritmos/04-Controle/03-Multipla.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"sidebarAlgoritmos",previous:{title:"Sele\xe7\xe3o",permalink:"/materiais/docs/Algoritmos/Controle/Selecao"},next:{title:"Repeti\xe7\xe3o",permalink:"/materiais/docs/Algoritmos/Controle/Repeticao"}},u={},c=[{value:"Sintaxe",id:"sintaxe",level:2},{value:"Refer\xeancias",id:"refer\xeancias",level:2},{value:"Materiais externos",id:"materiais-externos",level:3}],p={toc:c},m="wrapper";function g(e){let{components:a,...t}=e;return(0,o.kt)(m,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"m\xfaltipla-escolha"},"M\xfaltipla escolha"),(0,o.kt)("p",null,"Em situa\xe7\xf5es em que precisamos testar diversos valores pontuais, poder\xedamos utilizar a diversas express\xf5es ",(0,o.kt)("inlineCode",{parentName:"p"},"se")," encadeadas, formando uma sele\xe7\xe3o encadeada do tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"se-sen\xe3o-se"),", e testar os poss\xedveis valores."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")," "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A regi\xe3o Sul do Brasil possui tr\xeas estados. De acordo com o IBGE, cada estado possui uma sigla e um c\xf3digo. Pe\xe7a ao usu\xe1rio que digite a sigla do estado, e apresente na tela o nome do estado,  c\xf3digo do estado e em que regi\xe3o do pa\xeds se encontra. Caso a siga do estado entrada pelo usu\xe1rio n\xe3o esteja cadastrada, mostre a mensagem ",(0,o.kt)("em",{parentName:"li"},'"Estado ainda n\xe3o cadastrado no sistema."'),".  ")),(0,o.kt)("admonition",{title:"Dados",type:"note"},(0,o.kt)("table",{parentName:"admonition"},(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Sigla do Estado"),(0,o.kt)("th",{parentName:"tr",align:null},"C\xf3digo"),(0,o.kt)("th",{parentName:"tr",align:null},"Estado"),(0,o.kt)("th",{parentName:"tr",align:null},"Regi\xe3o"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PR"),(0,o.kt)("td",{parentName:"tr",align:null},"41"),(0,o.kt)("td",{parentName:"tr",align:null},"Paran\xe1"),(0,o.kt)("td",{parentName:"tr",align:null},"Sul")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SC"),(0,o.kt)("td",{parentName:"tr",align:null},"42"),(0,o.kt)("td",{parentName:"tr",align:null},"Santa Catarina"),(0,o.kt)("td",{parentName:"tr",align:null},"Sul")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RS"),(0,o.kt)("td",{parentName:"tr",align:null},"43"),(0,o.kt)("td",{parentName:"tr",align:null},"Rio Grande so Sul"),(0,o.kt)("td",{parentName:"tr",align:null},"Sul")))),(0,o.kt)("p",{parentName:"admonition"},"Fonte: ",(0,o.kt)("a",{parentName:"p",href:"https://www.ibge.gov.br/explica/codigos-dos-municipios.php"},"IBGE. C\xf3digos dos munic\xedpios IBGE."))),(0,o.kt)("p",null,"Uma abordagem para a solu\xe7\xe3o seria testar cada valor de forma encadeada."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Resposta"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'//Vari\xe1veis\ncaractere sigla_estado;\n\n//Entrada\nescreva("Entre com o sigla do estado: ");\nleia(sigla_estado)\n\n//Processamento e sa\xedda\nse (sigla_estado == "PR"): //<- Verifica se o estado \xe9 Paran\xe1\nent\xe3o\n  in\xedcio\n    escreva("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul");\n  fim;\nsen\xe3o\n  se (sigla_estado == "SC"): //<- Verifica se o estado \xe9 Santa Catarina\n  ent\xe3o\n    in\xedcio\n      escreva("Estado: Santa Catarina - Sigla: SC - C\xf3digo: 2 - Regi\xe3o: Sul");\n    fim;\n  sen\xe3o\n    se (sigla_estado == "RS"): //<- Verifica se o estado \xe9 Paran\xe1\n    ent\xe3o\n      in\xedcio\n        escreva("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul");\n      fim;\n    sen\xe3o //<- N\xe3o restou outra op\xe7\xe3o\n      in\xedcio\n        escreva("Estado ainda n\xe3o cadastrado no sistema.")\n      fim.\nfimse;\nfim.\n\n//Sa\xedda\nSystem.out.printf("O antecessor de %d \xe9 %d\\n", valor, antecessor);\nSystem.out.printf("O sucessor de %d \xe9 %d\\n", valor, sucessor);\n'))),(0,o.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'//Vari\xe1veis\nString sigla_estado;\nScanner entrada;\n\n//Entrada\nSystem.out.println("Entre com o c\xf3digo do estado: ");\nentrada = new Scanner(System.in);\nsigla_estado = entrada.next();\nentrada.close();\n\n//Processamento e sa\xedda\nif (sigla_estado.equals("PR")) //<- Verifica se o estado \xe9 Paran\xe1\n{\n  System.out.println("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul");\n}\nelse\n{\n  if (sigla_estado.equals("SC")) //<- Verifica se o estado \xe9 Santa Catarina\n  {\n    System.out.println("Estado: Santa Catarina - Sigla: SC - C\xf3digo: 2 - Regi\xe3o: Sul");\n  }\n  else\n    if (sigla_estado.equals("RS")) //<- Verifica se o estado \xe9 Paran\xe1\n    {\n      System.out.println("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul");\n    }\n    else //<- N\xe3o restou outra op\xe7\xe3o\n    {\n      System.out.println("Estado ainda n\xe3o cadastrado no sistema.");\n    }\n}\n'))),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'#Vari\xe1veis e entrada\nsigla_estado = input("Entre com a sigla do estado: ")\n\n#Processamento e sa\xedda\nif sigla_estado == "PR": #<- Verifica se o estado \xe9 Paran\xe1\n    print("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul")\nelse:\n  if sigla_estado == "SC": #<- Verifica se o estado \xe9 Santa Catarina\n      print("Estado: Santa Catarina - Sigla: Sc - C\xf3digo: 42 - Regi\xe3o: Sul")\n  else:\n    if sigla_estado == "RS": #<- Verifica se o estado \xe9 Rio Grande do Sul\n        print("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul")\n    else: #<- N\xe3o restou outra op\xe7\xe3o\n        escreva("Estado ainda n\xe3o cadastrado no sistema.")\n'))))),(0,o.kt)("p",null,"Outra forma seria utilizar uma estrutura em que todos os valores fossem testados de uma forma n\xe3o aninhada, com a estrutura ",(0,o.kt)("inlineCode",{parentName:"p"},"escolha"),"."),(0,o.kt)("h2",{id:"sintaxe"},"Sintaxe"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"escolha <vari\xe1vel> //<- vari\xe1vel a ser observada\n  caso X: // caso o valor da vari\xe1vel seja X\n    //c\xf3digo caso X\n  caso Y: // caso o valor da vari\xe1vel seja Y\n    //c\xf3digo caso Y\n  caso Z: // caso o valor da vari\xe1vel seja Z\n    //c\xf3digo caso Z\n  caso contr\xe1rio: //demais casos\n    //c\xf3digo demais casos \nfimescolha;\n"))),(0,o.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"switch(<vari\xe1vel>){ //Vari\xe1vel a ser observada\n  case X: //Caso o valor da vari\xe1vel seja X\n    //C\xf3digo caso X\n    break;\n  case Y: //Caso o valor da vari\xe1vel seja Y\n    //C\xf3digo caso Y\n    break;\n  case Z: //Caso o valor da vari\xe1vel seja Z\n    //C\xf3digo caso Z\n    break;\n  default: //demais casos\n    //C\xf3digo demais casos\n}\n"))),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)("p",null,"  Em Python, n\xe3o h\xe1 este tipo de estrutura. Por\xe9m, pode ser abordada com ",(0,o.kt)("inlineCode",{parentName:"p"},"elif"),", que tem a ideia de ",(0,o.kt)("inlineCode",{parentName:"p"},"se-sen\xe3o-se")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"match <vari\xe1vel> : #Vari\xe1vel a ser observada\n  #C\xf3digo caso X\n  case X: #Verifica se a vari\xe1vel possui valor X\n    #C\xf3digo caso X\n  case Y: #Verifica se a vari\xe1vel possui valor Y\n  #C\xf3digo caso Y\n  case X: #Verifica se a vari\xe1vel possui valor Z\n    #C\xf3digo caso Z\n  case _: #demais casos\n    #C\xf3digo demais casos\n")),(0,o.kt)("admonition",{title:"Informa\xe7\xe3o",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"A estrutura ",(0,o.kt)("inlineCode",{parentName:"p"},"match")," est\xe1 dispon\xedvel em Python a partir da vers\xe3o 3.10. Em vers\xf5es anteriores, pode-se obter o mesmo resultado utilizando estruturas ",(0,o.kt)("inlineCode",{parentName:"p"},"if-elif"),"."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"if <vari\xe1vel> == X : #Verifica se a vari\xe1vel possui valor X\n#C\xf3digo caso X\nelif <vari\xe1vel> == Y: #Verifica se a vari\xe1vel possui valor Y\n#C\xf3digo caso Y\nelif <vari\xe1vel> == Z: #Verifica se a vari\xe1vel possui valor Z\n#C\xf3digo caso Z\nelse: #demais casos\n#C\xf3digo demais casos\n")))),(0,o.kt)(s.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"switch(<vari\xe1vel>){ //Vari\xe1vel a ser observada (char ou int)\n  case X: //Caso o valor da vari\xe1vel seja X\n    //C\xf3digo caso X\n    break;\n  case Y: //Caso o valor da vari\xe1vel seja Y\n    //C\xf3digo caso Y\n    break;\n  case Z: //Caso o valor da vari\xe1vel seja Z\n    //C\xf3digo caso Z\n    break;\n  default: //demais casos\n    //C\xf3digo demais casos\n}\n")),(0,o.kt)("admonition",{title:"Informa\xe7\xe3o",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Em C, a estrutura ",(0,o.kt)("inlineCode",{parentName:"p"},"switch-case")," opera apenas com dados dos tipos ",(0,o.kt)("inlineCode",{parentName:"p"},"char")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"int"),".")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo"),(0,o.kt)("br",{parentName:"p"}),"\n","A solu\xe7\xe3o para o exemplo anterior utilizando ",(0,o.kt)("inlineCode",{parentName:"p"},"escolha")," poderia ser da seguinte forma:"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"pseudocodigo",label:"Pseudoc\xf3digo",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'in\xedcio\n  //Vari\xe1veis\n  caractere sigla_estado;\n\n  //Entrada\n  escreva("Entre com o sigla do estado: ");\n  leia(sigla_estado)\n\n  //Processamento e sa\xedda\n  escolha sigla_estado //<- Vari\xe1vel a ser observada\n    caso "PR": \n      escreva("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul");\n    caso "SC": \n      escreva("Estado: Santa Catarina - Sigla: SC - C\xf3digo: 2 - Regi\xe3o: Sul");\n    caso "RS": \n      escreva("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul");\n    caso contr\xe1rio: \n      escreva("Estado ainda n\xe3o cadastrado no sistema.");\n  fimescolha;\nfim.\n'))),(0,o.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)("p",null,"  Em Java, a estrutura que realiza este tipo de opera\xe7\xe3o \xe9 o ",(0,o.kt)("inlineCode",{parentName:"p"},"switch-case"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'//Vari\xe1veis\nString sigla_estado;\nScanner entrada;\n\n//Entrada\nSystem.out.println("Entre com o c\xf3digo do estado: ");\nentrada = new Scanner(System.in);\nSigla_estado = entrada.next();\nentrada.close();\n\n//Processamento e sa\xedda\nswitch(sigla_estado) //<- Vari\xe1vel a ser observada\n{\n  case "PR":\n  {\n    System.out.println("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul");\n    break;\n  }\n  case "SC":\n  {\n    System.out.println("Estado: Santa Catarina - Sigla: SC - C\xf3digo: 2 - Regi\xe3o: Sul");\n    break;\n  }\n  case "RS":\n  {\n    System.out.println("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul");\n    break;\n  }\n  default:\n  {\n    System.out.println("Estado ainda n\xe3o cadastrado no sistema.");\n  }\n}\n')),(0,o.kt)("p",null,"  Em Java, os comandos ",(0,o.kt)("inlineCode",{parentName:"p"},"break")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"default")," s\xe3o opcionais. Seus significados s\xe3o:  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"break"),": Indica que nenhuma outra op\xe7\xe3o precisa ser consultada.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"default"),": Esta op\xe7\xe3o ser\xe1 selecionada caso nenuma das alternativas anteriores seja atingida.  "))),(0,o.kt)(s.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'#Vari\xe1veis e entrada\nsigla_estado = input("Entre com a sigla do estado: ")\n\n#Processamento e sa\xedda\nmatch sigla_estado: #<- Vari\xe1vel a ser observada\n  case "PR": #<- Verifica se o estado \xe9 Paran\xe1\n    print("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul")\n  case "SC": #<- Verifica se o estado \xe9 Santa Catarina\n    print("Estado: Santa Catarina - Sigla: Sc - C\xf3digo: 42 - Regi\xe3o: Sul")\n  case "RS": #<- Verifica se o estado \xe9 Rio Grande do Sul\n    print("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul")\n  case _: #<- N\xe3o restou outra op\xe7\xe3o\n    print("Estado ainda n\xe3o cadastrado no sistema.")\n'))),(0,o.kt)(s.Z,{value:"c",label:"C",mdxType:"TabItem"},(0,o.kt)("p",null,"  Em C, a estrutura que realiza este tipo de opera\xe7\xe3o \xe9 o ",(0,o.kt)("inlineCode",{parentName:"p"},"switch-case"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'//Vari\xe1veis\nint codigo_estado;\n\n//Entrada\nprintf("Entre com o c\xf3digo do estado: "\\n);\nscanf("%d", &codigo_estado);\n\n//Processamento e sa\xedda\nswitch(codigo_estado) //<- Vari\xe1vel a ser observada\n{\n  case 41:\n  {\n    printf("Estado: Paran\xe1 - Sigla: PR - C\xf3digo: 41 - Regi\xe3o: Sul");\n    break;\n  }\n  case 42:\n  {\n    printf("Estado: Santa Catarina - Sigla: SC - C\xf3digo: 2 - Regi\xe3o: Sul");\n    break;\n  }\n  case 43:\n  {\n    printf("Estado: Rio Grande do Sul - Sigla: RS - C\xf3digo: 43 - Regi\xe3o: Sul");\n    break;\n  }\n  default:\n  {\n    printf("Estado ainda n\xe3o cadastrado no sistema.");\n  }\n}\n')),(0,o.kt)("p",null,"  Em C, os comandos ",(0,o.kt)("inlineCode",{parentName:"p"},"break")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"default")," s\xe3o opcionais. Seus significados s\xe3o:  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"break"),": Indica que nenhuma outra op\xe7\xe3o precisa ser consultada.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"default"),": Esta op\xe7\xe3o ser\xe1 selecionada caso nenuma das alternativas anteriores seja atingida.  ")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Atividades"),"  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Amplie a tabela de estados, considerando estados das regi\xf5es Sudeste e Centro-Oeste. Al\xe9m do nome do estado, informe tamb\xe9m c\xf3digo do estado, nome da regi\xe3o e c\xf3digo da regi\xe3o.  "),(0,o.kt)("li",{parentName:"ul"},"Amplie a tabela de estados, para incluir todos os estados do Brasil. Al\xe9m do nome do estado, informe tamb\xe9m c\xf3digo do estado, nome da regi\xe3o e c\xf3digo da regi\xe3o.  ")),(0,o.kt)("h2",{id:"refer\xeancias"},"Refer\xeancias"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://plataforma.bvirtual.com.br/Leitor/Publicacao/323/pdf/"},"Forbellone, Andr\xe9 Luiz Villar; Ebersp\xe4tcher, Henri Frederico. L\xf3gica de programa\xe7\xe3o: a constru\xe7\xe3o de algoritmos e estruturas de dados. 4.ed. S\xe3o Paulo: Pearson Prentice Hall, 2022."))),(0,o.kt)("h3",{id:"materiais-externos"},"Materiais externos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.ibge.gov.br/explica/codigos-dos-municipios.php"},"IBGE. C\xf3digos dos munic\xedpios IBGE."))))}g.isMDXComponent=!0}}]);